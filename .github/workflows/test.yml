name: fpm test

on: [push, pull_request]

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest ]
        include:
        - os: ubuntu-latest
          gcc_v: 9
        - os: macos-latest
          gcc_v: 9
        #- os: windows-latest
        #  gcc_v: 8

    env:
      FC: gfortran
      GCC_V: ${{ matrix.gcc_v }}
      TZ: UTC+04:00

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install GFortran macOS
      if: contains(matrix.os, 'macos')
      run: |
          ls /usr/local/bin/gfortran-*
          ln -s /usr/local/bin/gfortran-${GCC_V} /usr/local/bin/gfortran
          which gfortran-${GCC_V}
          which gfortran

    - name: Install GFortran Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
        --slave /usr/bingcov gcov /usr/bin/gcov-${GCC_V}

    - name: Install fpm
      uses: fortran-lang/setup-fpm@v3
      with:
        use-haskell: ${{ matrix.haskell }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Display environment
      run: |
        #make -k -p -fNOTTHERE
        echo "end" > foo.f90
        gfortran -cpp -E -dM foo.f90
        gfortran --version
        fpm --version

    - name: tests Linux
      if: contains(matrix.os, 'ubuntu')
      run: fpm test --profile release

    - name: tests MacOS
      if: contains(matrix.os, 'macos')
      run: fpm test --profile release -flag "-D _POSIX_C_SOURCE -D __USE_POSIX -DMacOS"
      # _POSIX_C_SOURCE should be used instead of __USE_POSIX according to standard.
      # while looking inside "posix1_lim.h" I found out that some
      # stuff has been changed HOST_NAME_MAX now is _POSIX_HOST_NAME_MAX
      # LOGIN_NAME_MAX now is _POSIX_LOGIN_NAME_MAX pastebin.com/kFmAbWcJ

#    - name: tests MSWindows
#      if: contains(matrix.os, 'windows')
#      run: fpm test --profile release -flag "-D _WIN32"

#    - name: Run demo programs (fpm run)
#      run: fpm run --profile release

    - name: cleanup Linux
      if: contains(matrix.os, 'ubuntu')
      run: ls -ltras
    - name: cleanup MacOS
      if: contains(matrix.os, 'macos')
      run: ls -ltras
#    - name: cleanup MSWindows
#      if: contains(matrix.os, 'windows')
#      run: dir
